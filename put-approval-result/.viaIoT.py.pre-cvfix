#!/usr/bin/env python
# -*- coding: utf-8 -*-
import boto3


def key_search(data, target_key):
    if type(data) == list:
        for item in data:
            res = key_search(item, target_key)
            if res:
                return res
    elif type(data) == dict:
        for key, val in data.items():
            if key == target_key:
                return val
            else:
                res = key_search(val, target_key)
                if res:
                    return res
    return None


def lambda_handler(event, context):
    # Initiate the Pipeline Client
    pipelineClient = boto3.client('codepipeline')

    # The Pipeline to Work With
    myPipeline = 'shanem-testing'

    # The State of the Pipeline
    state = pipelineClient.get_pipeline_state(name=myPipeline)

    myToken = key_search(state, 'token')
    print 'Token:\n ' + str(myToken)

    myStage = 'Build'
    myAction = 'approveBuild'

    if myToken is None:
        print 'Error TOKEN IS NONE'
        return 'none-awaiting'
    else:
        pipelineClient.put_approval_result(pipelineName=myPipeline, stageName=myStage, actionName=myAction,
                                           result={'summary': 'Approved via lambda IoT', 'status': 'Approved'},
                                           token=myToken)

    return 'worked'


